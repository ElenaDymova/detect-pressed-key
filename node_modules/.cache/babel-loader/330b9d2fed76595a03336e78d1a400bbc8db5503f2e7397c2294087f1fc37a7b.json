{"ast":null,"code":"var _jsxFileName = \"/Users/elenadymova/Desktop/detect-pressed-key/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [count, setCount] = React.useState(0);\n  const onClickDecrease = () => {\n    if (count > -50) {\n      setCount(prev => prev - 1);\n    }\n  };\n  const onClickReset = () => {\n    setCount(0);\n  };\n  const onClickIncrease = () => {\n    if (count < 50) {\n      setCount(prev => prev + 1);\n    }\n  };\n  const textColor = count < 0 ? 'rgb(216, 40, 40)' : count > 0 ? 'rgb(31, 176, 31)' : 'rgb(152, 146, 146)';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button\",\n          children: \"68\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"name\",\n          children: \"Dasa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"key\",\n            children: \"Key: d\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"code\",\n            children: \"Code: 83\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"oDgYfYHkD9Wkv4hrAPCkI/ev3YU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","count","setCount","onClickDecrease","prev","onClickReset","onClickIncrease","textColor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/elenadymova/Desktop/detect-pressed-key/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport './App.css';\n\nfunction App() {\n  const [count, setCount] = React.useState(0);\n\n  const onClickDecrease = () => {\n    if (count > -50) {\n      setCount(prev => prev - 1);\n    }\n  }\n\n  const onClickReset = () => {\n    setCount(0);\n  }\n\n  const onClickIncrease = () => {\n    if (count < 50) {\n      setCount(prev => prev + 1);\n    }\n  }\n\n  const textColor = count < 0 ? 'rgb(216, 40, 40)' : count > 0 ? 'rgb(31, 176, 31)' : 'rgb(152, 146, 146)';\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        {/* <div>Press any key</div> */}\n        <div className=\"main-content\">\n          <div className=\"button\">68</div>\n          <div className=\"name\">Dasa</div>\n          <div className=\"text\">\n            <p className=\"key\">Key: d</p>\n            <p className=\"code\">Code: 83</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,KAAK,CAACC,QAAQ,CAAC,CAAC,CAAC;EAE3C,MAAMO,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAIF,KAAK,GAAG,CAAC,EAAE,EAAE;MACfC,QAAQ,CAACE,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;IAC5B;EACF,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzBH,QAAQ,CAAC,CAAC,CAAC;EACb,CAAC;EAED,MAAMI,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAIL,KAAK,GAAG,EAAE,EAAE;MACdC,QAAQ,CAACE,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;IAC5B;EACF,CAAC;EAED,MAAMG,SAAS,GAAGN,KAAK,GAAG,CAAC,GAAG,kBAAkB,GAAGA,KAAK,GAAG,CAAC,GAAG,kBAAkB,GAAG,oBAAoB;EAExG,oBACEH,OAAA;IAAKU,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBX,OAAA;MAAKU,SAAS,EAAC,WAAW;MAAAC,QAAA,eAExBX,OAAA;QAAKU,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC3BX,OAAA;UAAKU,SAAS,EAAC,QAAQ;UAAAC,QAAA,EAAC;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAChCf,OAAA;UAAKU,SAAS,EAAC,MAAM;UAAAC,QAAA,EAAC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAChCf,OAAA;UAAKU,SAAS,EAAC,MAAM;UAAAC,QAAA,gBACnBX,OAAA;YAAGU,SAAS,EAAC,KAAK;YAAAC,QAAA,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eAC7Bf,OAAA;YAAGU,SAAS,EAAC,MAAM;YAAAC,QAAA,EAAC;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACb,EAAA,CApCQD,GAAG;AAAAe,EAAA,GAAHf,GAAG;AAsCZ,eAAeA,GAAG;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}